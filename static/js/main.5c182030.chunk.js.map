{"version":3,"sources":["components/nurse/index.tsx","components/stacy/Stacy.tsx","components/stacy/index.tsx","components/prisoner/Prisoner.tsx","components/prisoner/index.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx","utils/index.js"],"names":["NurseComponent","lazy","Plane","props","receiveShadow","args","transparent","opacity","Nurse","d","mouse","useRef","x","y","useState","animationType","setAnimationType","useEffect","onKeyup","e","console","log","key","parseInt","document","addEventListener","removeEventListener","onMouseMove","current","getMousePos","shadowMap","pixelRatio","camera","position","color","intensity","shadow-camera-left","shadow-camera-bottom","shadow-camera-right","shadow-camera-top","shadow-camera-near","shadow-camera-far","castShadow","rotation","Math","PI","fallback","scale","moveJoint","joint","degreeLimit","degrees","getMouseDegrees","xD","THREE","lerp","yD","degToRad","Model","group","useLoader","GLTFLoader","nodes","animations","texture","actions","mixer","useFrame","state","delta","update","idle","clipAction","play","forEach","clip","uncacheClip","mixamorigNeck","mixamorigSpine","ref","dispose","object","geometry","skeleton","map","map-flipY","skinning","Stacy","Neck","Spine","Prisoner","App","animationIdx","setAnimationIdx","style","width","height","display","justifyContent","alignItems","flex","textAlign","backgroundColor","flexDirection","cursor","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","clientX","clientY","dx","dy","w","innerWidth","innerHeight"],"mappings":"sMAGMA,EAAiBC,gBAAK,kBAAM,gCAE5BC,EAAQ,SAAC,GAAkB,IAAbC,EAAY,oBAC5B,OACI,iDAAUA,GAAV,IAAiBC,eAAa,EAA9B,UACI,qCAAqBC,KAAM,CAAC,IAAK,IAAK,GAAI,KAC1C,gCAAgBC,aAAW,EAACC,QAAS,UAmDlCC,EA9CD,WACV,IAAMC,EAAI,KACJC,EAAQC,iBAAO,CAAEC,EAAG,EAAGC,EAAG,IAFhB,EAG0BC,mBAAS,GAHnC,mBAGTC,EAHS,KAGMC,EAHN,KAiBhB,OAXAC,qBAAU,WACN,IAAMC,EAAU,SAACC,GACbC,QAAQC,IAAIF,EAAEG,KACVC,SAASJ,EAAEG,KAAO,GAClBN,EAAiBO,SAASJ,EAAEG,OAIpC,OADAE,SAASC,iBAAiB,QAASP,GAC5B,kBAAMM,SAASE,oBAAoB,QAASR,MACpD,IAGC,eAAC,IAAD,CAAQS,YAAa,SAACR,GAAD,OAAQT,EAAMkB,QAAUC,YAAYV,IAAKW,WAAS,EAACC,WAAY,CAAC,EAAG,KAAMC,OAAQ,CAAEC,SAAU,CAAC,GAAI,EAAG,KAA1H,UACI,iCAAwCC,MAAO,MAAUC,UAAW,GAAKF,SAAU,CAAC,EAAG,GAAI,KAC3F,kCACIA,SAAU,EAAE,EAAG,GAAI,GACnBG,sBAAyB,EAAL3B,EACpB4B,wBAA2B,EAAL5B,EACtB6B,sBAAqB7B,EACrB8B,oBAAmB9B,EACnB+B,qBAAoB,GACpBC,oBAAmB,KACnBC,YAAU,IAGd,uBAAMT,SAAU,CAAC,EAAG,GAAI,GAAxB,UACI,6BAAa5B,KAAM,CAAC,GAAI,MACxB,mCAAmB6B,MAAM,eAE7B,cAAC,EAAD,CAAOS,SAAU,EAAE,GAAMC,KAAKC,GAAI,EAAG,GAAIZ,SAAU,CAAC,GAAI,GAAI,MAC5D,cAAC,WAAD,CAAUa,SAAU,iCAChB,yCACA,sCAAsBZ,MAAM,eAFhC,SAII,cAAClC,EAAD,CAAgBe,cAAeA,EAAeL,MAAOA,EAAOuB,SAAU,CAAC,GAAI,GAAI,GAAIc,MAAO,CAAC,IAAM,IAAM,a,eC9CvH,SAASC,EAAUtC,EAAYuC,GAAuC,IAA3BC,EAA0B,uDAAJ,GAC3DC,EAAUC,YAAgB1C,EAAMkB,QAAQhB,EAAGF,EAAMkB,QAAQf,EAAGqC,GAChED,EAAMN,SAASU,GAAKC,YAAgBC,KAClCN,EAAMN,SAASU,IAAM,EACrBF,EAAQtC,EACR,IAEFoC,EAAMN,SAASa,GAAKF,YAAgBC,KAClCN,EAAMN,SAASa,IAAM,EACrBL,EAAQvC,EACR,IAEFqC,EAAMN,SAAS/B,EAAI0C,YAAgBG,SAASR,EAAMN,SAASU,IAC3DJ,EAAMN,SAAS9B,EAAIyC,YAAgBG,SAASR,EAAMN,SAASa,IAG9C,SAASE,EAAT,GAA8B,IAAVvD,EAAS,oBACpCwD,EAAQhD,mBAD4B,EAEZiD,YAAUC,IAAY,cAA5CC,EAFkC,EAElCA,MAAOC,EAF2B,EAE3BA,WACTC,EAAUJ,YAAUN,gBAAqB,cAEzCW,EAAUtD,mBAL0B,EAM1BG,oBAAS,kBAAM,IAAIwC,iBAAqBQ,EAAM3D,EAAMY,mBAA7DmD,EANmC,oBAqB1C,OAdAC,aAAS,SAACC,EAAOC,GAAR,OAAkBH,EAAMI,OAAOD,MAExCpD,qBAAU,WAGR,OAFCgD,EAAQrC,QAAkB,CAAE2C,KAAML,EAAMM,WAAWT,EAAW5D,EAAMY,eAAgB4C,EAAM/B,UAC1FqC,EAAQrC,QAAgB2C,KAAKE,OACvB,kBAAMV,EAAWW,SAAQ,SAACC,GAAD,OAAUT,EAAMU,YAAYD,SAC3D,CAACxE,EAAMY,cAAemD,EAAOH,IAEhCI,aAAS,SAACC,EAAOC,GACfH,EAAMI,OAAOD,GACbrB,EAAU7C,EAAMO,MAAOoD,EAAMe,eAC7B7B,EAAU7C,EAAMO,MAAOoD,EAAMgB,mBAI7B,+CAAOC,IAAKpB,GAAWxD,GAAvB,IAA8B6E,QAAS,KAAvC,SACE,wBAAOrC,SAAU,CAACC,KAAKC,GAAK,EAAG,EAAG,GAAlC,UACE,2BAAWoC,OAAQnB,EAAK,gBACxB,6BACE1D,eAAa,EACbsC,YAAU,EACVwC,SAAWpB,EAAK,MAAkBoB,SAClCC,SAAWrB,EAAK,MAAkBqB,SAJpC,SAME,sCAAsBC,IAAKpB,EAASqB,aAAW,EAAOC,UAAQ,YCjDxE,IAAMpF,EAAQ,SAAC,GAAkB,IAAbC,EAAY,oBAC5B,OACI,iDAAUA,GAAV,IAAiBC,eAAa,EAA9B,UACI,qCAAqBC,KAAM,CAAC,IAAK,IAAK,GAAI,KAC1C,gCAAgBC,aAAW,EAACC,QAAS,UAgDlCgF,EA3CD,WACV,IAAM9E,EAAI,KACJC,EAAQC,iBAAO,CAAEC,EAAG,EAAGC,EAAG,IAFhB,EAG0BC,mBAAS,GAHnC,mBAGTC,EAHS,KAGMC,EAHN,KAiBhB,OAXAC,qBAAU,WACN,IAAMC,EAAU,SAACC,GACbC,QAAQC,IAAIF,EAAEG,KACVC,SAASJ,EAAEG,KAAO,GAClBN,EAAiBO,SAASJ,EAAEG,OAIpC,OADAE,SAASC,iBAAiB,QAASP,GAC5B,kBAAMM,SAASE,oBAAoB,QAASR,MACpD,IAGC,eAAC,IAAD,CAAQS,YAAa,SAACR,GAAD,OAAQT,EAAMkB,QAAUC,YAAYV,IAAKW,WAAS,EAACC,WAAY,CAAC,EAAG,KAAMC,OAAQ,CAAEC,SAAU,CAAC,GAAI,EAAG,KAA1H,UACI,iCAAwCC,MAAO,MAAUC,UAAW,GAAKF,SAAU,CAAC,EAAG,GAAI,KAC3F,kCACIA,SAAU,EAAE,EAAG,GAAI,GACnBG,sBAAyB,EAAL3B,EACpB4B,wBAA2B,EAAL5B,EACtB6B,sBAAqB7B,EACrB8B,oBAAmB9B,EACnB+B,qBAAoB,GACpBC,oBAAmB,KACnBC,YAAU,IAGd,uBAAMT,SAAU,CAAC,EAAG,GAAI,GAAxB,UACI,6BAAa5B,KAAM,CAAC,GAAI,MACxB,mCAAmB6B,MAAM,eAE7B,cAAC,EAAD,CAAOS,SAAU,EAAE,GAAMC,KAAKC,GAAI,EAAG,GAAIZ,SAAU,CAAC,GAAI,GAAI,MAC5D,cAAC,WAAD,CAAUa,SAAU,KAApB,SACI,cAAC,EAAD,CAAgB/B,cAAeA,EAAeL,MAAOA,EAAOuB,SAAU,CAAC,GAAI,GAAI,GAAIc,MAAO,CAAC,IAAM,IAAM,aC5CvH,SAASC,EAAUtC,EAAYuC,GAAuC,IAA3BC,EAA0B,uDAAJ,GAC/D,GAAKD,EAAMN,SAAX,CACA,IAAIQ,EAAUC,YAAgB1C,EAAMkB,QAAQhB,EAAGF,EAAMkB,QAAQf,EAAGqC,GAChED,EAAMN,SAASU,GAAKC,YAAgBC,KAClCN,EAAMN,SAASU,IAAM,EACrBF,EAAQtC,EACR,IAEFoC,EAAMN,SAASa,GAAKF,YAAgBC,KAClCN,EAAMN,SAASa,IAAM,EACrBL,EAAQvC,EACR,IAEFqC,EAAMN,SAAS/B,EAAI0C,YAAgBG,SAASR,EAAMN,SAASU,IAC3DJ,EAAMN,SAAS9B,EAAIyC,YAAgBG,SAASR,EAAMN,SAASa,KAG9C,SAASE,EAAT,GAA8B,IAAVvD,EAAS,oBACpCwD,EAAQhD,mBAD4B,EAEZiD,YAAUC,IAAY,qCAA5CC,EAFkC,EAElCA,MAAOC,EAF2B,EAE3BA,WACTC,EAAUJ,YAAUN,gBAAqB,qCAEzCW,EAAUtD,mBAL0B,EAM1BG,oBAAS,kBAAM,IAAIwC,iBAAqBQ,EAAM3D,EAAMY,mBAA7DmD,EANmC,oBAsB1C,OAfAC,aAAS,SAACC,EAAOC,GAAR,OAAkBH,EAAMI,OAAOD,MAExCpD,qBAAU,WAIR,OAHAG,QAAQC,IAAIlB,EAAMY,eACjBkD,EAAQrC,QAAkB,CAAE2C,KAAML,EAAMM,WAAWT,EAAW5D,EAAMY,eAAgB4C,EAAM/B,UAC1FqC,EAAQrC,QAAgB2C,KAAKE,OACvB,kBAAMV,EAAWW,SAAQ,SAACC,GAAD,OAAUT,EAAMU,YAAYD,SAC3D,IAEHR,aAAS,SAACC,EAAOC,GACfH,EAAMI,OAAOD,GACbrB,EAAU7C,EAAMO,MAAOoD,EAAM0B,MAC7BxC,EAAU7C,EAAMO,MAAOoD,EAAM2B,UAI7B,+CAAOV,IAAKpB,GAAWxD,GAAvB,IAA8B6E,QAAS,KAAvC,SACE,wBAAOrC,SAAU,CAACC,KAAKC,GAAK,EAAG,EAAG,GAAlC,UACE,2BAAWoC,OAAQnB,EAAK,OACxB,6BACE1D,eAAa,EACbsC,YAAU,EACVwC,SAAWpB,EAAK,SAAqBoB,SACrCC,SAAWrB,EAAK,SAAqBqB,SAJvC,SAME,sCAAsBC,IAAKpB,EAASqB,aAAW,EAAOC,UAAQ,YCnDxE,IAAMpF,EAAQ,SAAC,GAAkB,IAAbC,EAAY,oBAC5B,OACI,iDAAUA,GAAV,IAAiBC,eAAa,EAA9B,UACI,qCAAqBC,KAAM,CAAC,IAAK,IAAK,GAAI,KAC1C,gCAAgBC,aAAW,EAACC,QAAS,UAgDlCmF,EA3CE,WACb,IAAMjF,EAAI,KACJC,EAAQC,iBAAO,CAAEC,EAAG,EAAGC,EAAG,IAFb,EAGuBC,mBAAS,GAHhC,mBAGZC,EAHY,KAGGC,EAHH,KAiBnB,OAXAC,qBAAU,WACN,IAAMC,EAAU,SAACC,GACbC,QAAQC,IAAIF,EAAEG,KACVC,SAASJ,EAAEG,KAAO,GAClBN,EAAiBO,SAASJ,EAAEG,OAIpC,OADAE,SAASC,iBAAiB,QAASP,GAC5B,kBAAMM,SAASE,oBAAoB,QAASR,MACpD,IAGC,eAAC,IAAD,CAAQS,YAAa,SAACR,GAAD,OAAQT,EAAMkB,QAAUC,YAAYV,IAAKW,WAAS,EAACC,WAAY,CAAC,EAAG,KAAMC,OAAQ,CAAEC,SAAU,CAAC,GAAI,EAAG,KAA1H,UACI,iCAAwCC,MAAO,MAAUC,UAAW,GAAKF,SAAU,CAAC,EAAG,GAAI,KAC3F,kCACIA,SAAU,EAAE,EAAG,GAAI,GACnBG,sBAAyB,EAAL3B,EACpB4B,wBAA2B,EAAL5B,EACtB6B,sBAAqB7B,EACrB8B,oBAAmB9B,EACnB+B,qBAAoB,GACpBC,oBAAmB,KACnBC,YAAU,IAGd,uBAAMT,SAAU,CAAC,EAAG,GAAI,GAAxB,UACI,6BAAa5B,KAAM,CAAC,GAAI,MACxB,mCAAmB6B,MAAM,eAE7B,cAAC,EAAD,CAAOS,SAAU,EAAE,GAAMC,KAAKC,GAAI,EAAG,GAAIZ,SAAU,CAAC,GAAI,GAAI,MAC5D,cAAC,WAAD,CAAUa,SAAU,KAApB,SACI,cAAC,EAAD,CAAmB/B,cAAeA,EAAeL,MAAOA,EAAOuB,SAAU,CAAC,GAAI,GAAI,GAAIc,MAAO,CAAC,IAAM,IAAM,aCgD3G4C,MA9Ff,WAAgB,IAAD,EAC2B7E,mBAAS,GADpC,mBACN8E,EADM,KACQC,EADR,KAEb,OACE,qBAAKC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAAtC,SACoB,IAAjBJ,EACC,mCACE,sBACEE,MAAO,CACLG,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZH,OAAQ,QACRD,MAAO,SANX,UASE,qBACED,MAAO,CACLM,KAAM,QACNC,UAAW,SACXC,gBAAiB,UACjBpE,MAAO,OACP8D,OAAQ,SANZ,SASE,qBACEF,MAAO,CACLG,QAAS,OACTC,eAAgB,SAChBF,OAAQ,OACRO,cAAe,SACfC,OAAQ,WAEVC,QAAS,WAAQZ,EAAgB,IARnC,SAUE,4CAGJ,qBACEC,MAAO,CACLM,KAAM,QACNE,gBAAiB,UACjBN,OAAQ,QACR9D,MAAO,OACPmE,UAAW,UANf,SASE,qBACEP,MAAO,CACLG,QAAS,OACTC,eAAgB,SAChBF,OAAQ,OACRO,cAAe,SACfC,OAAQ,WAEVC,QAAS,WAAQZ,EAAgB,IARnC,SAUE,sDAGJ,qBACEC,MAAO,CACLM,KAAM,QACNlE,MAAO,OACPoE,gBAAiB,UACjBN,OAAQ,QACRK,UAAW,UANf,SASE,qBACEP,MAAO,CACLG,QAAS,OACTC,eAAgB,SAChBF,OAAQ,OACRO,cAAe,SACfC,OAAQ,WAEVC,QAAS,WAAQZ,EAAgB,IARnC,SAUE,iDAMR,qCACoB,IAAjBD,GAAsB,cAAC,EAAD,IACL,IAAjBA,GAAsB,cAAC,EAAD,IACL,IAAjBA,GAAsB,cAAC,EAAD,UCjFbc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCVnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzF,SAAS0F,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNtG,QAAQsG,MAAMA,EAAMC,a,+BE1IrB,SAAS9F,EAAYV,GAC1B,MAAO,CAAEP,EAAGO,EAAEyG,QAAS/G,EAAGM,EAAE0G,SAEvB,SAASzE,EAAgBxC,EAAGC,EAAGqC,GACpC,IAAI4E,EAAK,EACPC,EAAK,EAMHC,EAASrB,OAAOsB,WAAhBD,EAA+BrB,OAAOuB,YAgC1C,OA5BItH,GAAKoH,EAAM,IAMbF,EAAO5E,IAJC8E,EAAM,EAAIpH,IAEMoH,EAAM,GAAM,KAEA,KAAQ,GAI1CpH,GAAKoH,EAAM,IAGbF,EAAM5E,IAFEtC,EAAIoH,EAAM,IACMA,EAAM,GAAM,KACD,KAGjCnH,GAAKmH,EAAM,IAIbD,EAAqB,GAAd7E,IAHC8E,EAAM,EAAInH,IACMmH,EAAM,GAAM,KAEM,KAAQ,GAGhDnH,GAAKmH,EAAM,IAGbD,EAAM7E,IAFErC,EAAImH,EAAM,IACMA,EAAM,GAAM,KACD,KAE9B,CAAEpH,EAAGkH,EAAIjH,EAAGkH,GA3CrB,sE","file":"static/js/main.5c182030.chunk.js","sourcesContent":["import React, { lazy, Suspense, useEffect, useRef, useState } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { getMousePos } from \"../../utils\";\nconst NurseComponent = lazy(() => import(\"./Nurse\"));\n\nconst Plane = ({ ...props }) => {\n    return (\n        <mesh {...props} receiveShadow>\n            <planeBufferGeometry args={[500, 500, 99, 1]} />\n            <shadowMaterial transparent opacity={0.4} />\n        </mesh>\n    )\n}\n\nconst Nurse = () => {\n    const d = 8.25;\n    const mouse = useRef({ x: 0, y: 0 });\n    const [animationType, setAnimationType] = useState(0);\n\n\n    useEffect(() => {\n        const onKeyup = (e: KeyboardEvent) => {\n            console.log(e.key);\n            if (parseInt(e.key) < 9) {\n                setAnimationType(parseInt(e.key));\n            }\n        }\n        document.addEventListener('keyup', onKeyup);\n        return () => document.removeEventListener('keyup', onKeyup);\n    }, []);\n\n    return (\n        <Canvas onMouseMove={(e) => (mouse.current = getMousePos(e))} shadowMap pixelRatio={[1, 2.5]} camera={{ position: [0, -3, 18] }}>\n            <hemisphereLight /*skyColor={\"black\"}*/ color={0x00ffff} intensity={0.5} position={[0, 50, 0]} />\n            <directionalLight\n                position={[-8, 20, 8]}\n                shadow-camera-left={d * -1}\n                shadow-camera-bottom={d * -1}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-near={0.1}\n                shadow-camera-far={1500}\n                castShadow\n            />\n\n            <mesh position={[0, 0, -4]}>\n                <boxGeometry args={[20, 34]} />\n                <meshBasicMaterial color=\"#002E2C\" />\n            </mesh>\n            <Plane rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -10, 10]} />\n            <Suspense fallback={<mesh>\n                <sphereBufferGeometry />\n                <meshStandardMaterial color=\"hotpink\" />\n            </mesh>}>\n                <NurseComponent animationType={animationType} mouse={mouse} position={[0, -10, 3]} scale={[0.08, 0.08, 0.08]} />\n            </Suspense>\n        </Canvas>\n    )\n}\n\nexport default Nurse;","// Auto-generated by https://github.com/react-spring/gltfjsx\n\nimport * as THREE from \"three\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLoader, useFrame } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { getMouseDegrees } from \"../../utils\";\n\nfunction moveJoint(mouse: any, joint: any, degreeLimit: number = 40) {\n  let degrees = getMouseDegrees(mouse.current.x, mouse.current.y, degreeLimit);\n  joint.rotation.xD = THREE.MathUtils.lerp(\n    joint.rotation.xD || 0,\n    degrees.y,\n    0.1\n  );\n  joint.rotation.yD = THREE.MathUtils.lerp(\n    joint.rotation.yD || 0,\n    degrees.x,\n    0.1\n  );\n  joint.rotation.x = THREE.MathUtils.degToRad(joint.rotation.xD);\n  joint.rotation.y = THREE.MathUtils.degToRad(joint.rotation.yD);\n}\n\nexport default function Model({ ...props }) {\n  const group = useRef();\n  const { nodes, animations } = useLoader(GLTFLoader, \"/stacy.glb\");\n  const texture = useLoader(THREE.TextureLoader, \"/stacy.jpg\");\n\n  const actions = useRef();\n  const [mixer] = useState(() => new THREE.AnimationMixer(nodes[props.animationType]));\n  useFrame((state, delta) => mixer.update(delta));\n\n  useEffect(() => {\n    (actions.current as any) = { idle: mixer.clipAction(animations[props.animationType], group.current) };\n    (actions.current as any).idle.play();\n    return () => animations.forEach((clip) => mixer.uncacheClip(clip));\n  }, [props.animationType, mixer, animations]);\n\n  useFrame((state, delta) => {\n    mixer.update(delta);\n    moveJoint(props.mouse, nodes.mixamorigNeck);\n    moveJoint(props.mouse, nodes.mixamorigSpine);\n  });\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]}>\n        <primitive object={nodes[\"mixamorigHips\"]} />\n        <skinnedMesh\n          receiveShadow\n          castShadow\n          geometry={(nodes[\"stacy\"] as any).geometry}\n          skeleton={(nodes[\"stacy\"] as any).skeleton}\n        >\n          <meshStandardMaterial map={texture} map-flipY={false} skinning />\n        </skinnedMesh>\n      </group>\n    </group>\n  );\n}\n","import React, { Suspense, useEffect, useRef, useState } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport StacyComponent from \"./Stacy\";\nimport { getMousePos } from \"../../utils\";\n\n\nconst Plane = ({ ...props }) => {\n    return (\n        <mesh {...props} receiveShadow>\n            <planeBufferGeometry args={[500, 500, 99, 1]} />\n            <shadowMaterial transparent opacity={0.4} />\n        </mesh>\n    )\n}\n\nconst Stacy = () => {\n    const d = 8.25;\n    const mouse = useRef({ x: 0, y: 0 });\n    const [animationType, setAnimationType] = useState(5);\n\n\n    useEffect(() => {\n        const onKeyup = (e: KeyboardEvent) => {\n            console.log(e.key);\n            if (parseInt(e.key) < 9) {\n                setAnimationType(parseInt(e.key));\n            }\n        }\n        document.addEventListener('keyup', onKeyup);\n        return () => document.removeEventListener('keyup', onKeyup);\n    }, []);\n\n    return (\n        <Canvas onMouseMove={(e) => (mouse.current = getMousePos(e))} shadowMap pixelRatio={[1, 2.5]} camera={{ position: [0, -3, 18] }}>\n            <hemisphereLight /*skyColor={\"black\"}*/ color={0x00ffff} intensity={0.5} position={[0, 50, 0]} />\n            <directionalLight\n                position={[-8, 20, 8]}\n                shadow-camera-left={d * -1}\n                shadow-camera-bottom={d * -1}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-near={0.1}\n                shadow-camera-far={1500}\n                castShadow\n            />\n\n            <mesh position={[0, 0, -4]}>\n                <boxGeometry args={[20, 34]} />\n                <meshBasicMaterial color=\"#035E7B\" />\n            </mesh>\n            <Plane rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -10, 10]} />\n            <Suspense fallback={null}>\n                <StacyComponent animationType={animationType} mouse={mouse} position={[0, -10, 3]} scale={[0.08, 0.08, 0.08]} />\n            </Suspense>\n        </Canvas>\n    )\n}\n\nexport default Stacy;","// Auto-generated by https://github.com/react-spring/gltfjsx\n\nimport * as THREE from \"three\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLoader, useFrame } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { getMouseDegrees } from \"../../utils\";\n\nfunction moveJoint(mouse: any, joint: any, degreeLimit: number = 40) {\n  if (!joint.rotation) return;\n  let degrees = getMouseDegrees(mouse.current.x, mouse.current.y, degreeLimit);\n  joint.rotation.xD = THREE.MathUtils.lerp(\n    joint.rotation.xD || 0,\n    degrees.y,\n    0.1\n  );\n  joint.rotation.yD = THREE.MathUtils.lerp(\n    joint.rotation.yD || 0,\n    degrees.x,\n    0.1\n  );\n  joint.rotation.x = THREE.MathUtils.degToRad(joint.rotation.xD);\n  joint.rotation.y = THREE.MathUtils.degToRad(joint.rotation.yD);\n}\n\nexport default function Model({ ...props }) {\n  const group = useRef();\n  const { nodes, animations } = useLoader(GLTFLoader, \"./threeJs-experiment/capoeira.glb\");\n  const texture = useLoader(THREE.TextureLoader, \"./threeJs-experiment/capoeira.jpg\");\n\n  const actions = useRef();\n  const [mixer] = useState(() => new THREE.AnimationMixer(nodes[props.animationType]));\n  useFrame((state, delta) => mixer.update(delta));\n\n  useEffect(() => {\n    console.log(props.animationType);\n    (actions.current as any) = { idle: mixer.clipAction(animations[props.animationType], group.current) };\n    (actions.current as any).idle.play();\n    return () => animations.forEach((clip) => mixer.uncacheClip(clip));\n  }, [/*props.animationType, mixer, animations*/]);\n\n  useFrame((state, delta) => {\n    mixer.update(delta);\n    moveJoint(props.mouse, nodes.Neck);\n    moveJoint(props.mouse, nodes.Spine);\n  });\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]}>\n        <primitive object={nodes[\"Hips\"]} />\n        <skinnedMesh\n          receiveShadow\n          castShadow\n          geometry={(nodes[\"Prisoner\"] as any).geometry}\n          skeleton={(nodes[\"Prisoner\"] as any).skeleton}\n        >\n          <meshStandardMaterial map={texture} map-flipY={false} skinning />\n        </skinnedMesh>\n      </group>\n    </group>\n  );\n}\n","import React, { Suspense, useEffect, useRef, useState } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport PrisonerComponent from \"./Prisoner\";\nimport { getMousePos } from \"../../utils\";\n\n\nconst Plane = ({ ...props }) => {\n    return (\n        <mesh {...props} receiveShadow>\n            <planeBufferGeometry args={[500, 500, 99, 1]} />\n            <shadowMaterial transparent opacity={0.4} />\n        </mesh>\n    )\n}\n\nconst Prisoner = () => {\n    const d = 8.25;\n    const mouse = useRef({ x: 0, y: 0 });\n    const [animationType, setAnimationType] = useState(0);\n\n\n    useEffect(() => {\n        const onKeyup = (e: KeyboardEvent) => {\n            console.log(e.key);\n            if (parseInt(e.key) < 9) {\n                setAnimationType(parseInt(e.key));\n            }\n        }\n        document.addEventListener('keyup', onKeyup);\n        return () => document.removeEventListener('keyup', onKeyup);\n    }, []);\n\n    return (\n        <Canvas onMouseMove={(e) => (mouse.current = getMousePos(e))} shadowMap pixelRatio={[1, 2.5]} camera={{ position: [0, -3, 18] }}>\n            <hemisphereLight /*skyColor={\"black\"}*/ color={0x00ffff} intensity={0.5} position={[0, 50, 0]} />\n            <directionalLight\n                position={[-8, 20, 8]}\n                shadow-camera-left={d * -1}\n                shadow-camera-bottom={d * -1}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-near={0.1}\n                shadow-camera-far={1500}\n                castShadow\n            />\n\n            <mesh position={[0, 0, -4]}>\n                <boxGeometry args={[20, 34]} />\n                <meshBasicMaterial color=\"#4D2D52\" />\n            </mesh>\n            <Plane rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -10, 10]} />\n            <Suspense fallback={null}>\n                <PrisonerComponent animationType={animationType} mouse={mouse} position={[0, -10, 3]} scale={[0.08, 0.08, 0.08]} />\n            </Suspense>\n        </Canvas>\n    )\n}\n\nexport default Prisoner;","import React, { useState } from \"react\";\nimport Nurse from \"./components/nurse\";\nimport Stacy from \"./components/stacy\";\nimport Prisoner from \"./components/prisoner\";\n// import './App.css';\n\nfunction App() {\n  const [animationIdx, setAnimationIdx] = useState(0);\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      {animationIdx === 0 ?\n        <>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\",\n              width: \"100vw\",\n            }}\n          >\n            <div\n              style={{\n                flex: \"1 0 0\",\n                textAlign: \"center\",\n                backgroundColor: \"#002E2C\",\n                color: \"#FFF\",\n                height: \"100vh\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: \"100%\",\n                  flexDirection: \"column\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => { setAnimationIdx(1) }}\n              >\n                <div>Nurse</div>\n              </div>\n            </div>\n            <div\n              style={{\n                flex: \"1 0 0\",\n                backgroundColor: \"#4D2D52\",\n                height: \"100vh\",\n                color: \"#FFF\",\n                textAlign: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: \"100%\",\n                  flexDirection: \"column\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => { setAnimationIdx(2) }}\n              >\n                <div>Zombie Prisoner</div>\n              </div>\n            </div>\n            <div\n              style={{\n                flex: \"1 0 0\",\n                color: \"#FFF\",\n                backgroundColor: \"#035E7B\",\n                height: \"100vh\",\n                textAlign: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: \"100%\",\n                  flexDirection: \"column\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => { setAnimationIdx(3) }}\n              >\n                <div>Stacy</div>\n              </div>\n            </div>\n          </div>\n        </>\n        :\n        <>\n          {animationIdx === 1 && <Nurse />}\n          {animationIdx === 2 && <Prisoner />}\n          {animationIdx === 3 && <Stacy />}\n        </>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","export function getMousePos(e) {\n  return { x: e.clientX, y: e.clientY };\n}\nexport function getMouseDegrees(x, y, degreeLimit) {\n  let dx = 0,\n    dy = 0,\n    xdiff,\n    xPercentage,\n    ydiff,\n    yPercentage;\n\n  let w = { x: window.innerWidth, y: window.innerHeight };\n\n  // Left (Rotates neck left between 0 and -degreeLimit)\n  // 1. If cursor is in the left half of screen\n  if (x <= w.x / 2) {\n    // 2. Get the difference between middle of screen and cursor position\n    xdiff = w.x / 2 - x;\n    // 3. Find the percentage of that difference (percentage toward edge of screen)\n    xPercentage = (xdiff / (w.x / 2)) * 100;\n    // 4. Convert that to a percentage of the maximum rotation we allow for the neck\n    dx = ((degreeLimit * xPercentage) / 100) * -1;\n  }\n\n  // Right (Rotates neck right between 0 and degreeLimit)\n  if (x >= w.x / 2) {\n    xdiff = x - w.x / 2;\n    xPercentage = (xdiff / (w.x / 2)) * 100;\n    dx = (degreeLimit * xPercentage) / 100;\n  }\n  // Up (Rotates neck up between 0 and -degreeLimit)\n  if (y <= w.y / 2) {\n    ydiff = w.y / 2 - y;\n    yPercentage = (ydiff / (w.y / 2)) * 100;\n    // Note that I cut degreeLimit in half when she looks up\n    dy = ((degreeLimit * 0.5 * yPercentage) / 100) * -1;\n  }\n  // Down (Rotates neck down between 0 and degreeLimit)\n  if (y >= w.y / 2) {\n    ydiff = y - w.y / 2;\n    yPercentage = (ydiff / (w.y / 2)) * 100;\n    dy = (degreeLimit * yPercentage) / 100;\n  }\n  return { x: dx, y: dy };\n}\n"],"sourceRoot":""}